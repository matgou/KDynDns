<?php

namespace MGN\KDynDnsBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * RecordsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecordsRepository extends EntityRepository
{
    public function Exist(Records $records)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT count(r) FROM MGNKDynDnsBundle:Records r JOIN r.zone z WHERE r.name = :name AND z.fqdn = :fqdn'
            )
            ->setParameter('name', $records->getName())
            ->setParameter('fqdn', $records->getZone()->getFqdn())
            ->getSingleScalarResult();
    }

    public function findByTokenAndFqdn($token, $fqdn)
    {
        try {
            if(preg_match("/^(.*?)\.(.*)/", $fqdn, $match)) {
                $name=$match[1];
                $fqdn=$match[2];
                return $this->getEntityManager()
                ->createQuery(
                    'SELECT r FROM MGNKDynDnsBundle:Records r JOIN r.zone z WHERE r.name = :name AND z.fqdn = :fqdn AND r.token = :token'
                )
                ->setParameter('token', $token)
                ->setParameter('fqdn', $fqdn)
                ->setParameter('name', $name)
                ->getSingleResult();
            } else {
                return null;
            }
        } catch (NoResultException $e) {
            return null;
        }
    }
}
